// source: UploadResponse.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.example.proto.ErrorResponse', null, global);
goog.exportSymbol('proto.com.example.proto.HeadResponse', null, global);
goog.exportSymbol('proto.com.example.proto.SuccessResponse', null, global);
goog.exportSymbol('proto.com.example.proto.UploadResponse', null, global);
goog.exportSymbol('proto.com.example.proto.UploadResponse.ImOneofCase', null, global);
goog.exportSymbol('proto.com.example.proto.UploadResponse.MsgType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.example.proto.UploadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.example.proto.UploadResponse.oneofGroups_);
};
goog.inherits(proto.com.example.proto.UploadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.example.proto.UploadResponse.displayName = 'proto.com.example.proto.UploadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.example.proto.HeadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.example.proto.HeadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.example.proto.HeadResponse.displayName = 'proto.com.example.proto.HeadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.example.proto.SuccessResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.example.proto.SuccessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.example.proto.SuccessResponse.displayName = 'proto.com.example.proto.SuccessResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.example.proto.ErrorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.example.proto.ErrorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.example.proto.ErrorResponse.displayName = 'proto.com.example.proto.ErrorResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.example.proto.UploadResponse.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.com.example.proto.UploadResponse.ImOneofCase = {
  IM_ONEOF_NOT_SET: 0,
  HEADRESPONSE: 3,
  SUCCESSRESPONSE: 4,
  ERRORRESPONSE: 5
};

/**
 * @return {proto.com.example.proto.UploadResponse.ImOneofCase}
 */
proto.com.example.proto.UploadResponse.prototype.getImOneofCase = function() {
  return /** @type {proto.com.example.proto.UploadResponse.ImOneofCase} */(jspb.Message.computeOneofCase(this, proto.com.example.proto.UploadResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.example.proto.UploadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.example.proto.UploadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.example.proto.UploadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.example.proto.UploadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    headresponse: (f = msg.getHeadresponse()) && proto.com.example.proto.HeadResponse.toObject(includeInstance, f),
    successresponse: (f = msg.getSuccessresponse()) && proto.com.example.proto.SuccessResponse.toObject(includeInstance, f),
    errorresponse: (f = msg.getErrorresponse()) && proto.com.example.proto.ErrorResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.example.proto.UploadResponse}
 */
proto.com.example.proto.UploadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.example.proto.UploadResponse;
  return proto.com.example.proto.UploadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.example.proto.UploadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.example.proto.UploadResponse}
 */
proto.com.example.proto.UploadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.example.proto.UploadResponse.MsgType} */ (reader.readEnum());
      msg.setMsgtype(value);
      break;
    case 3:
      var value = new proto.com.example.proto.HeadResponse;
      reader.readMessage(value,proto.com.example.proto.HeadResponse.deserializeBinaryFromReader);
      msg.setHeadresponse(value);
      break;
    case 4:
      var value = new proto.com.example.proto.SuccessResponse;
      reader.readMessage(value,proto.com.example.proto.SuccessResponse.deserializeBinaryFromReader);
      msg.setSuccessresponse(value);
      break;
    case 5:
      var value = new proto.com.example.proto.ErrorResponse;
      reader.readMessage(value,proto.com.example.proto.ErrorResponse.deserializeBinaryFromReader);
      msg.setErrorresponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.example.proto.UploadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.example.proto.UploadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.example.proto.UploadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.example.proto.UploadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgtype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getHeadresponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.example.proto.HeadResponse.serializeBinaryToWriter
    );
  }
  f = message.getSuccessresponse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.com.example.proto.SuccessResponse.serializeBinaryToWriter
    );
  }
  f = message.getErrorresponse();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.com.example.proto.ErrorResponse.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.com.example.proto.UploadResponse.MsgType = {
  HEAD: 0,
  SUCCESS: 1,
  ERROR: 2
};

/**
 * optional MsgType msgType = 1;
 * @return {!proto.com.example.proto.UploadResponse.MsgType}
 */
proto.com.example.proto.UploadResponse.prototype.getMsgtype = function() {
  return /** @type {!proto.com.example.proto.UploadResponse.MsgType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.com.example.proto.UploadResponse.MsgType} value
 * @return {!proto.com.example.proto.UploadResponse} returns this
 */
proto.com.example.proto.UploadResponse.prototype.setMsgtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional HeadResponse headResponse = 3;
 * @return {?proto.com.example.proto.HeadResponse}
 */
proto.com.example.proto.UploadResponse.prototype.getHeadresponse = function() {
  return /** @type{?proto.com.example.proto.HeadResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.example.proto.HeadResponse, 3));
};


/**
 * @param {?proto.com.example.proto.HeadResponse|undefined} value
 * @return {!proto.com.example.proto.UploadResponse} returns this
*/
proto.com.example.proto.UploadResponse.prototype.setHeadresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.com.example.proto.UploadResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.example.proto.UploadResponse} returns this
 */
proto.com.example.proto.UploadResponse.prototype.clearHeadresponse = function() {
  return this.setHeadresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.example.proto.UploadResponse.prototype.hasHeadresponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SuccessResponse successResponse = 4;
 * @return {?proto.com.example.proto.SuccessResponse}
 */
proto.com.example.proto.UploadResponse.prototype.getSuccessresponse = function() {
  return /** @type{?proto.com.example.proto.SuccessResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.example.proto.SuccessResponse, 4));
};


/**
 * @param {?proto.com.example.proto.SuccessResponse|undefined} value
 * @return {!proto.com.example.proto.UploadResponse} returns this
*/
proto.com.example.proto.UploadResponse.prototype.setSuccessresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.com.example.proto.UploadResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.example.proto.UploadResponse} returns this
 */
proto.com.example.proto.UploadResponse.prototype.clearSuccessresponse = function() {
  return this.setSuccessresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.example.proto.UploadResponse.prototype.hasSuccessresponse = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ErrorResponse errorResponse = 5;
 * @return {?proto.com.example.proto.ErrorResponse}
 */
proto.com.example.proto.UploadResponse.prototype.getErrorresponse = function() {
  return /** @type{?proto.com.example.proto.ErrorResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.example.proto.ErrorResponse, 5));
};


/**
 * @param {?proto.com.example.proto.ErrorResponse|undefined} value
 * @return {!proto.com.example.proto.UploadResponse} returns this
*/
proto.com.example.proto.UploadResponse.prototype.setErrorresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.com.example.proto.UploadResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.example.proto.UploadResponse} returns this
 */
proto.com.example.proto.UploadResponse.prototype.clearErrorresponse = function() {
  return this.setErrorresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.example.proto.UploadResponse.prototype.hasErrorresponse = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.example.proto.HeadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.example.proto.HeadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.example.proto.HeadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.example.proto.HeadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uploadoffeset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    chunksize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    expiretimestamp: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.example.proto.HeadResponse}
 */
proto.com.example.proto.HeadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.example.proto.HeadResponse;
  return proto.com.example.proto.HeadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.example.proto.HeadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.example.proto.HeadResponse}
 */
proto.com.example.proto.HeadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUploadoffeset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChunksize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiretimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.example.proto.HeadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.example.proto.HeadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.example.proto.HeadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.example.proto.HeadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUploadoffeset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getChunksize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getExpiretimestamp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string fileId = 1;
 * @return {string}
 */
proto.com.example.proto.HeadResponse.prototype.getFileid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.example.proto.HeadResponse} returns this
 */
proto.com.example.proto.HeadResponse.prototype.setFileid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.com.example.proto.HeadResponse.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.example.proto.HeadResponse} returns this
 */
proto.com.example.proto.HeadResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 uploadOffeset = 3;
 * @return {number}
 */
proto.com.example.proto.HeadResponse.prototype.getUploadoffeset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.example.proto.HeadResponse} returns this
 */
proto.com.example.proto.HeadResponse.prototype.setUploadoffeset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 chunkSize = 4;
 * @return {number}
 */
proto.com.example.proto.HeadResponse.prototype.getChunksize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.example.proto.HeadResponse} returns this
 */
proto.com.example.proto.HeadResponse.prototype.setChunksize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string expireTimeStamp = 5;
 * @return {string}
 */
proto.com.example.proto.HeadResponse.prototype.getExpiretimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.example.proto.HeadResponse} returns this
 */
proto.com.example.proto.HeadResponse.prototype.setExpiretimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.example.proto.SuccessResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.example.proto.SuccessResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.example.proto.SuccessResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.example.proto.SuccessResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    newoffset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    chunksize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isfinish: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.example.proto.SuccessResponse}
 */
proto.com.example.proto.SuccessResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.example.proto.SuccessResponse;
  return proto.com.example.proto.SuccessResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.example.proto.SuccessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.example.proto.SuccessResponse}
 */
proto.com.example.proto.SuccessResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNewoffset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChunksize(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsfinish(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.example.proto.SuccessResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.example.proto.SuccessResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.example.proto.SuccessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.example.proto.SuccessResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNewoffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getChunksize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIsfinish();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string fileId = 1;
 * @return {string}
 */
proto.com.example.proto.SuccessResponse.prototype.getFileid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.example.proto.SuccessResponse} returns this
 */
proto.com.example.proto.SuccessResponse.prototype.setFileid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.com.example.proto.SuccessResponse.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.example.proto.SuccessResponse} returns this
 */
proto.com.example.proto.SuccessResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 newOffset = 3;
 * @return {number}
 */
proto.com.example.proto.SuccessResponse.prototype.getNewoffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.example.proto.SuccessResponse} returns this
 */
proto.com.example.proto.SuccessResponse.prototype.setNewoffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 chunkSize = 4;
 * @return {number}
 */
proto.com.example.proto.SuccessResponse.prototype.getChunksize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.example.proto.SuccessResponse} returns this
 */
proto.com.example.proto.SuccessResponse.prototype.setChunksize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool isFinish = 5;
 * @return {boolean}
 */
proto.com.example.proto.SuccessResponse.prototype.getIsfinish = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.example.proto.SuccessResponse} returns this
 */
proto.com.example.proto.SuccessResponse.prototype.setIsfinish = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.example.proto.ErrorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.example.proto.ErrorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.example.proto.ErrorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.example.proto.ErrorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.example.proto.ErrorResponse}
 */
proto.com.example.proto.ErrorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.example.proto.ErrorResponse;
  return proto.com.example.proto.ErrorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.example.proto.ErrorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.example.proto.ErrorResponse}
 */
proto.com.example.proto.ErrorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.example.proto.ErrorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.example.proto.ErrorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.example.proto.ErrorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.example.proto.ErrorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string fileId = 1;
 * @return {string}
 */
proto.com.example.proto.ErrorResponse.prototype.getFileid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.example.proto.ErrorResponse} returns this
 */
proto.com.example.proto.ErrorResponse.prototype.setFileid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.com.example.proto.ErrorResponse.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.example.proto.ErrorResponse} returns this
 */
proto.com.example.proto.ErrorResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.com.example.proto.ErrorResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.example.proto.ErrorResponse} returns this
 */
proto.com.example.proto.ErrorResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.com.example.proto);
